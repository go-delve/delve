// Code generated by "stringer -type FileFlags,StreamType,Arch,MemoryState,MemoryType,MemoryProtection"; DO NOT EDIT.

package minidump

import "strconv"

const _FileFlags_name = "FileNormalFileWithDataSegsFileWithFullMemoryFileWithHandleDataFileFilterMemoryFileScanMemoryFileWithUnloadedModulesFileWithIncorrectlyReferencedMemoryFileFilterModulePathsFileWithProcessThreadDataFileWithPrivateReadWriteMemoryFileWithoutOptionalDataFileWithFullMemoryInfoFileWithThreadInfoFileWithCodeSegsFileWithoutAuxilliarySegsFileWithFullAuxilliaryStateFileWithPrivateCopyMemoryFileIgnoreInaccessibleMemoryFileWithTokenInformation"

var _FileFlags_map = map[FileFlags]string{
	0:      _FileFlags_name[0:10],
	1:      _FileFlags_name[10:26],
	2:      _FileFlags_name[26:44],
	4:      _FileFlags_name[44:62],
	8:      _FileFlags_name[62:78],
	16:     _FileFlags_name[78:92],
	32:     _FileFlags_name[92:115],
	64:     _FileFlags_name[115:150],
	128:    _FileFlags_name[150:171],
	256:    _FileFlags_name[171:196],
	512:    _FileFlags_name[196:226],
	1024:   _FileFlags_name[226:249],
	2048:   _FileFlags_name[249:271],
	4096:   _FileFlags_name[271:289],
	8192:   _FileFlags_name[289:305],
	16384:  _FileFlags_name[305:330],
	32768:  _FileFlags_name[330:357],
	65536:  _FileFlags_name[357:382],
	131072: _FileFlags_name[382:410],
	262144: _FileFlags_name[410:434],
}

func (i FileFlags) String() string {
	if str, ok := _FileFlags_map[i]; ok {
		return str
	}
	return "FileFlags(" + strconv.FormatInt(int64(i), 10) + ")"
}

const _StreamType_name = "UnusedStreamReservedStream0ReservedStream1ThreadListStreamModuleListStreamMemoryListStreamExceptionStreamSystemInfoStreamThreadExListStreamMemory64ListStreamCommentStreamACommentStreamWHandleDataStreamFunctionTableStreamUnloadedModuleStreamMiscInfoStreamMemoryInfoListStreamThreadInfoListStreamHandleOperationListStreamTokenStreamJavascriptDataStreamSystemMemoryInfoStreamProcessVMCounterStream"

var _StreamType_index = [...]uint16{0, 12, 27, 42, 58, 74, 90, 105, 121, 139, 157, 171, 185, 201, 220, 240, 254, 274, 294, 319, 330, 350, 372, 394}

func (i StreamType) String() string {
	if i >= StreamType(len(_StreamType_index)-1) {
		return "StreamType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StreamType_name[_StreamType_index[i]:_StreamType_index[i+1]]
}

const (
	_Arch_name_0 = "CpuArchitectureX86CpuArchitectureMipsCpuArchitectureAlphaCpuArchitecturePPCCpuArchitectureSHXCpuArchitectureARMCpuArchitectureIA64CpuArchitectureAlpha64CpuArchitectureMSILCpuArchitectureAMD64CpuArchitectureWoW64"
	_Arch_name_1 = "CpuArchitectureARM64"
	_Arch_name_2 = "CpuArchitectureUnknown"
)

var (
	_Arch_index_0 = [...]uint8{0, 18, 37, 57, 75, 93, 111, 130, 152, 171, 191, 211}
)

func (i Arch) String() string {
	switch {
	case i <= 10:
		return _Arch_name_0[_Arch_index_0[i]:_Arch_index_0[i+1]]
	case i == 12:
		return _Arch_name_1
	case i == 65535:
		return _Arch_name_2
	default:
		return "Arch(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const (
	_MemoryState_name_0 = "MemoryStateCommit"
	_MemoryState_name_1 = "MemoryStateReserve"
	_MemoryState_name_2 = "MemoryStateFree"
)

func (i MemoryState) String() string {
	switch {
	case i == 4096:
		return _MemoryState_name_0
	case i == 8192:
		return _MemoryState_name_1
	case i == 65536:
		return _MemoryState_name_2
	default:
		return "MemoryState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const (
	_MemoryType_name_0 = "MemoryTypePrivate"
	_MemoryType_name_1 = "MemoryTypeMapped"
	_MemoryType_name_2 = "MemoryTypeImage"
)

func (i MemoryType) String() string {
	switch {
	case i == 131072:
		return _MemoryType_name_0
	case i == 262144:
		return _MemoryType_name_1
	case i == 16777216:
		return _MemoryType_name_2
	default:
		return "MemoryType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const (
	_MemoryProtection_name_0 = "MemoryProtectNoAccessMemoryProtectReadOnly"
	_MemoryProtection_name_1 = "MemoryProtectReadWrite"
	_MemoryProtection_name_2 = "MemoryProtectWriteCopy"
	_MemoryProtection_name_3 = "MemoryProtectExecute"
	_MemoryProtection_name_4 = "MemoryProtectExecuteRead"
	_MemoryProtection_name_5 = "MemoryProtectExecuteReadWrite"
	_MemoryProtection_name_6 = "MemoryProtectExecuteWriteCopy"
	_MemoryProtection_name_7 = "MemoryProtectPageGuard"
	_MemoryProtection_name_8 = "MemoryProtectNoCache"
	_MemoryProtection_name_9 = "MemoryProtectWriteCombine"
)

var (
	_MemoryProtection_index_0 = [...]uint8{0, 21, 42}
)

func (i MemoryProtection) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _MemoryProtection_name_0[_MemoryProtection_index_0[i]:_MemoryProtection_index_0[i+1]]
	case i == 4:
		return _MemoryProtection_name_1
	case i == 8:
		return _MemoryProtection_name_2
	case i == 16:
		return _MemoryProtection_name_3
	case i == 32:
		return _MemoryProtection_name_4
	case i == 64:
		return _MemoryProtection_name_5
	case i == 128:
		return _MemoryProtection_name_6
	case i == 256:
		return _MemoryProtection_name_7
	case i == 512:
		return _MemoryProtection_name_8
	case i == 1024:
		return _MemoryProtection_name_9
	default:
		return "MemoryProtection(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
