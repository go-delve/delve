// Code generated by linux/mkall.go generatePtraceRegSet("loong64"). DO NOT EDIT.
// copied from arm, and modified by hand

package unix

import "unsafe"

// PtraceGetRegSetLoong64 fetches the registers used by loong64 binaries.
func PtraceGetRegSetLoong64(pid, addr int, regsout *PtraceRegsLoong64) error {
	iovec := Iovec{(*byte)(unsafe.Pointer(regsout)), uint64(unsafe.Sizeof(*regsout))}
	return ptrace(PTRACE_GETREGSET, pid, uintptr(addr), uintptr(unsafe.Pointer(&iovec)))
}

// PtraceSetRegSetLoong64 sets the registers used by loong64 binaries.
func PtraceSetRegSetLoong64(pid, addr int, regs *PtraceRegsLoong64) error {
	iovec := Iovec{(*byte)(unsafe.Pointer(regs)), uint64(unsafe.Sizeof(*regs))}
	return ptrace(PTRACE_SETREGSET, pid, uintptr(addr), uintptr(unsafe.Pointer(&iovec)))
}

// PtraceRegsLarch is the registers used by larch binaries.
type PtraceRegsLarch struct {
	Uregs [18]uint32
}

// PtraceGetRegsLarch fetches the registers used by larch binaries.
func PtraceGetRegsLarch(pid int, regsout *PtraceRegsLarch) error {
	return ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))
}

// PtraceSetRegsLarch sets the registers used by larch binaries.
func PtraceSetRegsLarch(pid int, regs *PtraceRegsLarch) error {
	return ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))
}

// PtraceRegsLoong64 is the registers used by loong64 binaries.
type PtraceRegsLoong64 struct {
	Regs     [32]uint64
	Crmd     uint64
	Prmd     uint64
	Cu       uint64
	Exconfig uint64
	Exst     uint64
	Epc      uint64
	Badvaddr uint64
	Orig_a0  uint64
}

// PtraceGetRegsLoong64 fetches the registers used by loong64 binaries.
func PtraceGetRegsLoong64(pid int, regsout *PtraceRegsLoong64) error {
	return ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))
}

// PtraceSetRegsLoong64 sets the registers used by loong64 binaries.
func PtraceSetRegsLoong64(pid int, regs *PtraceRegsLoong64) error {
	return ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))
}
